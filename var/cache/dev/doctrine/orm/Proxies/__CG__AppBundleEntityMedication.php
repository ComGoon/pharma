<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Medication extends \AppBundle\Entity\Medication implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'manufacturer', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'prescriptionMedications', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'pharmacyStock', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'supplierStock'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'manufacturer', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'prescriptionMedications', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'pharmacyStock', '' . "\0" . 'AppBundle\\Entity\\Medication' . "\0" . 'supplierStock'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Medication $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setManufacturer($manufacturer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManufacturer', [$manufacturer]);

        return parent::setManufacturer($manufacturer);
    }

    /**
     * {@inheritDoc}
     */
    public function getManufacturer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManufacturer', []);

        return parent::getManufacturer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPharmacyStock(\AppBundle\Entity\PharmacyStock $pharmacyStock = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPharmacyStock', [$pharmacyStock]);

        return parent::setPharmacyStock($pharmacyStock);
    }

    /**
     * {@inheritDoc}
     */
    public function getPharmacyStock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPharmacyStock', []);

        return parent::getPharmacyStock();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplierStock(\AppBundle\Entity\SupplierStock $supplierStock = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplierStock', [$supplierStock]);

        return parent::setSupplierStock($supplierStock);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplierStock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplierStock', []);

        return parent::getSupplierStock();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrescriptionMedications(\AppBundle\Entity\PrescriptionMedication $prescriptionMedications = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrescriptionMedications', [$prescriptionMedications]);

        return parent::setPrescriptionMedications($prescriptionMedications);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrescriptionMedications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrescriptionMedications', []);

        return parent::getPrescriptionMedications();
    }

    /**
     * {@inheritDoc}
     */
    public function addPrescriptionMedication(\AppBundle\Entity\PrescriptionMedication $prescriptionMedication)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrescriptionMedication', [$prescriptionMedication]);

        return parent::addPrescriptionMedication($prescriptionMedication);
    }

    /**
     * {@inheritDoc}
     */
    public function removePrescriptionMedication(\AppBundle\Entity\PrescriptionMedication $prescriptionMedication)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePrescriptionMedication', [$prescriptionMedication]);

        return parent::removePrescriptionMedication($prescriptionMedication);
    }

    /**
     * {@inheritDoc}
     */
    public function addPharmacyStock(\AppBundle\Entity\PharmacyStock $pharmacyStock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPharmacyStock', [$pharmacyStock]);

        return parent::addPharmacyStock($pharmacyStock);
    }

    /**
     * {@inheritDoc}
     */
    public function removePharmacyStock(\AppBundle\Entity\PharmacyStock $pharmacyStock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePharmacyStock', [$pharmacyStock]);

        return parent::removePharmacyStock($pharmacyStock);
    }

    /**
     * {@inheritDoc}
     */
    public function addSupplierStock(\AppBundle\Entity\SupplierStock $supplierStock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSupplierStock', [$supplierStock]);

        return parent::addSupplierStock($supplierStock);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSupplierStock(\AppBundle\Entity\SupplierStock $supplierStock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSupplierStock', [$supplierStock]);

        return parent::removeSupplierStock($supplierStock);
    }

}
